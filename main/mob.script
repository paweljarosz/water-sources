function init(self)
	self.pos = go.get_position()
	self.des_pos = self.pos
	timer.delay(0.2, true, function()
		self.des_pos = go.get_position()
		self.des_pos.y = self.des_pos.y - 20
	end)
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	self.pos = go.get_position()
	local dist = math.abs(self.pos.y - self.des_pos.y)
	dist = dist / 6
	if dist < 0.3 then dist = 0.3 end
	self.pos.y = (self.pos.y > self.des_pos.y) and (self.pos.y - dist) or (self.pos.y + dist)
	go.set_position(self.pos)
end

local m_trigger = hash("trigger_response")
local m_water = hash("water")
local m_ground = hash("ground")
local buoyancy = 10

function on_message(self, message_id, message, sender)
	if message_id == m_trigger then 
		if message.other_group == m_water then
			self.des_pos = go.get_position()
			self.des_pos.y = self.des_pos.y + buoyancy
		elseif message.other_group == m_ground then
			self.des_pos = go.get_position()
			self.des_pos.y = self.des_pos.y + 20
		end
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
